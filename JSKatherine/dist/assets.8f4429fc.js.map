{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.ts","assets/index.js"],"names":["MediaPlayer","constructor","config","media","el","plugins","_initPlugins","player","play","pause","muted","value","forEach","plugin","run","togglePlay","paused","mute","unmute","AutoPlay","prototype","video","document","querySelector","AutoPause","playButton","onclick","muteButton","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":";;AGAA;;AACA,ADCA,IAAA,SAAA;AAAA;ACAA,ADAA,YAAA;AFFA,AEKE,ADLF,MDAMA,GCAGmB,ECKP,MFLF,ACAA,CDAkB,EEKhB,ADLkB,CAAE,ECKpB;AFJAlB,AEKE,EFLFA,OEKO,IFLI,CAACC,IEKV,EFLS,CEKQ,CFLC,GEKlB;AFJA,AEKA,ADNJiB,QAAQ,CDCChB,AEKA,ADNAiB,KDCL,GAAalB,CCDjB,CAAmBY,GAAnB,CDCuB,CAACV,CCDC,CDCrB,CEKA,GAA0B,KAAK,ADNDG,MAAT,EAAiB,UCMZ,CAAwB,IAAxB,CAA6B,IAA7B,CAA1B;AFJA,AGEJ,ADGI,ADNF,MEGIc,AFHA,CAACd,EDCEF,AEKA,ECHE,EFHE,CEGCiB,AFHAZ,EDCV,GAAeR,ACDjB,EAAmB,CEGC,CAACqB,EHFE,CAAClB,KEKtB,EFLe,CEKe,ECHpB,CHFuB,AGEA,EHFjC,AEKmC,KCHzB,CAAd,gBDGkC,CAA4B,IAA5B,CAAiC,IAAjC,CAA9B;ACFJ,ADGG,ADNCE,IAAAA,EEGEA,IFHI,CAACG,CEGC,GAAG,CFHX,GEGeV,AFHA,IAAf,gBEGW,CAAgB;AHF3B,AGGFI,AFHC,EEGDA,EAAE,EAAEiB,GHHGf,EGEsB,UHF3B;AACD,AGGDD,ADGA,ECHAA,ADGA,OCHO,EAAE,ADGT,CCHU,ADGV,ICHcc,KDGd,CAAA,GAAA,GAAA,KCHU,EAAD,EAAiB,CDGtB,GCH0BK,GDG9B,EAAU,aCHgB,EAAjB;AAFoB,ADM3B,ADPFjB,CECa,CAAf,AFDEA,MAAM,CCOC,ADPAC,IAAP,ECOE,GAAc,MAAd;AFNFF,AGKF,ADGI,ADRH,CALD,CDKEA,IGKImB,EDGI,MFRI,EGKE,ADGE,CFRD,EGKEH,ADGE,IAAI,ICHE,CAACC,aAAT,CAAuB,CDGrB,CAAyB,KAAK,MCHhC,CAAnB,WDGqB,EAAkD;AFPnE,AEQE,MAAA,IFRIhB,KEQK,CFRC,CEQC,EFRE,GEQG;AFPhBC,AGINiB,ADEuE,KAAlD,CFNfjB,AEMF,IFNM,AGIA,CAACkB,CHJC,GCAGP,GDAG,AGIlB,GAAqB,EHJEX,IAAL,AGISD,EHLR,IGKc,CAACQ,UAAP,EAA3B;AHHMN,AESF,IAAA,EFTEA,KAAK,CESC,CFTC,AESA,MFTM,CESf,CAAiB,GFTGA,EESE,GFTP,EAFA,CEWE,CAAY,KAA7B;AFREN,AGIN,ADMI,IAAA,EFVEA,AGIAwB,KHJK,CEUC,CFVC,AEUA,GCNG,EHJExB,CGICmB,IHPA,IGOQ,CAACC,CDMxB,CAA0B,WCNX,CAAuB,MDMtC,EAA8C,KCN/B,ADMoC,CCNvD,qBDMI;AACD,GAVD;AFAI,AGINI,UHJUjB,AGIA,CAACgB,IHJL,GAAY,AGIlB,GAAqB,MAAM;AHHnB,AGIN,ADOQ,EAAA,ICPJnB,KDOI,CCPE,ADOF,CCPGJ,EHJE,GGIT,CAAaO,CHJCP,CEWV,CAAA,ECPR,CHJa,CAAWO,AGIA,KHJlB,SEWE,GAAR,UAA2B,OAA3B,EAA+D;AFV1D,AGIHH,ADOA,ICPAA,GHVe,CEiBT,ECPA,CAACW,EDOI,GAAG,CCPd,MDOqB,CAAC,CAAD,CAArB;ACND,ADQC,GCVF,KDUQ,CCRD,QDQU,GAAG,KAAK,CAAC,iBAAN,IAA2B,KAAK,SAAlD;AFZE,AGKFX,IAAAA,MHLMG,AGKA,CAACO,IHLL,AGKF,CHLYN,KAAV,EAAiB;AACf,AGKL,ADQC,QAAI,KFbKR,IEaT,CFbI,CAAWO,AEaA,KFbX,GAAmBC,KAAnB;AACD,AGKN,ADQK,CCdN,UDcW,MAAL,CAAY,IAAZ;AACD,KAFD,MAEO;AFvBQ,AGenB,ADSM,ICTF,CHfA,MEwBO,MAAL,CAAY,KCTKiB,ADSjB,SCTN,EAAkC;AHJ9B,AGKFA,ADSG,ECTHA,OHLOvB,EGKE,CAACwB,IHLR,CAAajB,OAAb,CAAqBC,AGKvB,CAAwBiB,KHLK,GGK7B,CHLiC,AGKA,sCAAjC,EAA2CC,KAA3C,CAAiDC,KAAK,IAAI;AHJtDnB,AGKFoB,ADSD,GAVO,CCCNA,EHLEpB,KGKK,CHLC,AGKAqB,CHLCpB,EGKT,CHLE,AGKUkB,CHLCzB,IGKI,CAAC4B,CHLhB,MGKF;AHJC,AGKF,GAFD,EHLE;AAGD,AGKF,ADSS,EAAA,SAAA,CAAA,SAAA,CAAA,sBAAA,GAAR,YAAA;AACE,QAAM,SAAS,GAAG,QAAQ,CAAC,eAAT,KAA6B,SAA/C;AFdF3B,EAAAA,IAAI,GAAG;AACL,AEcA,QAAI,CFdCL,KAAL,CAAWK,EEcX,EFdA,AEce;AFbhB,AEcG,WAAK,MAAL,CAAY,IAAZ;AACD,KAFD,MAEO;AFdTC,AEeI,EFfJA,KAAK,GAAG,CEeC,MAAL,CAAY,KAAZ;AFdF,AEeC,SFfIN,KAAL,CAAWM,KAAX;AACD,AEeA,GAPO;;AFPRM,AEeF,EFfEA,OEeF,GFfY,GAAG,GEef;AFdI,AE3BJ,CAAA,EAAA,KF2BQ,KAAKZ,KAAL,CAAWa,MAAf,EAAuB;AACrB,WAAKR,IAAL;AACD,AEcL,KFhBI,EEgBJ,CAAA,GFbS,MEaT,CAAA,GAAe,SAAf;AFZM,WAAKC,KAAL;AACD;AACF;;AACDQ,EAAAA,IAAI,GAAG;AACL,SAAKd,KAAL,CAAWO,KAAX,GAAmB,IAAnB;AACD;;AACDQ,EAAAA,MAAM,GAAG;AACP,SAAKf,KAAL,CAAWO,KAAX,GAAmB,KAAnB;AACD;;AAzCe;;eAkDHV","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["class MediaPlayer {\r\n  constructor(config) {\r\n    this.media = config.el;\r\n    this.plugins = config.plugins || [];\r\n    this._initPlugins();\r\n  }\r\n  _initPlugins() {\r\n    const player = {\r\n      play: () => this.play(),\r\n      pause: () => this.pause(),\r\n      media: this.media,\r\n      get muted() {\r\n        return this.media.muted;\r\n      },\r\n      set muted(value) {\r\n        this.media.muted = value;\r\n      },\r\n    };\r\n    this.plugins.forEach(plugin => {\r\n      plugin.run(player);\r\n    });\r\n  }\r\n  play() {\r\n    this.media.play();\r\n  }\r\n  pause() {\r\n    this.media.pause();\r\n  }\r\n  togglePlay() {\r\n    if (this.media.paused) {\r\n      this.play();\r\n    }\r\n    else {\r\n      this.pause();\r\n    }\r\n  }\r\n  mute() {\r\n    this.media.muted = true;\r\n  }\r\n  unmute() {\r\n    this.media.muted = false;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default MediaPlayer;\r\n","function AutoPlay() {}\r\nAutoPlay.prototype.run = function(player) {\r\n  if (!player.muted) {\r\n    player.muted = true;\r\n  }\r\n  player.play();\r\n};\r\n\r\nexport default AutoPlay;\r\n","import MediaPlayer from '../MediaPlayer'\r\n\r\nclass AutoPause {\r\n  private threshold: number;\r\n  player: MediaPlayer;\r\n  constructor() {\r\n    this.threshold = 0.25;\r\n    this.handleIntersection = this.handleIntersection.bind(this);\r\n    this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\r\n  }\r\n\r\n  run(player) {\r\n    this.player = player;\r\n\r\n    const observer = new IntersectionObserver(this.handleIntersection, {\r\n      threshold: this.threshold,\r\n    });\r\n\r\n    observer.observe(this.player.media);\r\n\r\n    document.addEventListener('visibilitychange', this.handleVisibilityChange);\r\n  }\r\n\r\n  private handleIntersection(entries: IntersectionObserverEntry[]) {\r\n    const entry = entries[0];\r\n\r\n    const isVisible = entry.intersectionRatio >= this.threshold;\r\n\r\n    if (isVisible) {\r\n      this.player.play();\r\n    } else {\r\n      this.player.pause();\r\n    }\r\n  }\r\n\r\n  private handleVisibilityChange() {\r\n    const isVisible = document.visibilityState === 'visible';\r\n    if (isVisible) {\r\n      this.player.play();\r\n    } else {\r\n      this.player.pause();\r\n    }\r\n  }\r\n}\r\n\r\nexport default AutoPause;","import MediaPlayer from './MediaPlayer.js';\r\nimport AutoPlay from './plugins/AutoPlay.js';\r\nimport AutoPause from './plugins/AutoPause.ts';\r\n\r\n\r\nconst video = document.querySelector('video');\r\nconst player = new MediaPlayer({\r\n  el: video,\r\n  plugins: [new AutoPlay(), new AutoPause()],\r\n});\r\n\r\nconst playButton = document.querySelector('#playButton');\r\nplayButton.onclick = () => player.togglePlay();\r\n\r\nconst muteButton = document.querySelector('#muteButton');\r\nmuteButton.onclick = () => {\r\n  if (player.media.muted) {\r\n    player.unmute();\r\n  } else {\r\n    player.mute();\r\n  }\r\n};\r\nif ('serviceWorker' in navigator) {\r\n  navigator.serviceWorker.register('/sw.js').catch(error => {\r\n    console.log(error.message);\r\n  });\r\n}"]}